---
import { type CollectionEntry, getCollection } from "astro:content";
import SocialList from "@/components/SocialList.astro";
import PostPreview from "@/components/blog/PostPreview.astro";
import Note from "@/components/note/Note.astro";
import { getAllPosts, getPinnedPosts } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";

// Pinned posts
const pinnedPosts = await getPinnedPosts();

// Regular posts (excluding pinned ones)
const MAX_POSTS = 30;
const allPosts = await getAllPosts();
const nonPinnedPosts = allPosts.filter(post => !post.data.pinned);
const allPostsByDate = nonPinnedPosts
	.sort(collectionDateSort)
	.slice(0, MAX_POSTS) as CollectionEntry<"post">[];

// Notes
const MAX_NOTES = 5;
const allNotes = await getCollection("note");
const latestNotes = allNotes.sort(collectionDateSort).slice(0, MAX_NOTES);
---

<PageLayout meta={{ title: "Home" }}>
	<section>
		<h1 class="title mb-6">Hello There!</h1>
		<p class="mb-4">
			I’m Amir, a software developer focused on the JavaScript ecosystem. Here I share ideas,
			experiments, and practical lessons I’ve found genuinely useful in real projects. Interested in
			contributing or collaborating? Reach out and let’s build together.
		</p>
		<SocialList />
	</section>
	
	<!-- Pinned Posts Section -->
	{
		pinnedPosts.length > 0 && (
			<section class="mt-16">
				<h2 class="title text-accent mb-6 text-xl">Pinned Posts</h2>
				<ul class="space-y-6" role="list">
					{
						pinnedPosts.map((p) => (
							<li class="grid gap-2 sm:grid-cols-[auto_1fr]">
								<PostPreview post={p} />
							</li>
						))
					}
				</ul>
			</section>
		)
	}
	
	<section class="mt-16">
		<h2 class="title text-accent mb-6 text-xl"><a href="/posts/">Posts</a></h2>
		<ul class="space-y-6" role="list">
			{
				allPostsByDate.map((p) => (
					<li class="grid gap-2 sm:grid-cols-[auto_1fr]">
						<PostPreview post={p} />
					</li>
				))
			}
		</ul>
		<h2 class="title text-accent mb-6 text-xl  p-5">
			<a class=" min-w-30 font-semibold text-gray-600 dark:text-gray-400" href="/posts/"
				>See All Posts →</a>
		</h2>
	</section>
	{
		latestNotes.length > 0 && (
			<section class="mt-16">
				<h2 class="title text-accent mb-6 text-xl">
					<a href="/notes/">Notes</a>
				</h2>
				<ul class="space-y-6" role="list">
					{latestNotes.map((note) => (
						<li>
							<Note note={note} as="h3" isPreview />
						</li>
					))}
				</ul>
			</section>
		)
	}
</PageLayout>
